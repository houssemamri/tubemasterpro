<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Affiliate_ajax extends Ajax_Controller {

	function __construct () {
		parent::__construct();
        $this->load->library('authentication', NULL, 'ion_auth');
	}
	
	function email_check () {
		$email = $this->input->post('email');
		if (!$this->ion_auth->email_check($email)) {
			echo true;
		}
		else {
			echo false;
		}
		die();
	}
	
	function signup () {
		$user = $this->ion_auth->user()->row();

        $data = array(
            'company'   => $this->input->post('company'),
            'country'   => $this->input->post('country'),
            'mobile' 	=> $this->input->post('mobile'),
            'whatsapp'  => $this->input->post('whatsApp'),
            'website'   => $this->input->post('website'),
            'twitter'   => $this->input->post('twitter'),
            'facebook'  => $this->input->post('fb'),
            'linkedin'  => $this->input->post('ln'),
            'linkedin'  => $this->input->post('ln'),
            'paypal_email'  => $this->input->post('paypal_email'),
            'aff_added'    	=> time(),
            'aff_status'=> 'pending'
        );
		
        if ( $this->ion_auth->update($user->id, $data) ) {
        	$body  = "<html><body>";
        	$body .= "<h1>Hey Nathan!</h1>";
			$body .= "<p>User ".$user->first_name." with an email of ".$user->email." wants to be an affiliate.</p>";
			$body .= "<p><a href='".base_url('dashboard/affiliates')."'>Manage Affiliates</a></p>";
			$body .= "<p>TubeTargetPro Team</p>";
			$body .= "</body></html>";
			
        	$this->load->library('email');
		
			$config['protocol']  = 'smtp';
			$config['smtp_host'] = 'box342.bluehost.com';
			$config['smtp_port'] = '26';
			$config['smtp_user'] = 'nathan@nathanhague.com';
			$config['smtp_pass'] = '$Wolfman1';
			$config['mailtype']  = 'html';
			$config['charset']   = 'iso-8859-1';
			$config['wordwrap']  = TRUE;
			
			$this->email->initialize($config);
		
			$this->email->from($user->email, $user->username);
			$this->email->to('nathan@nathanhague.com');
			
			$this->email->subject('New Affiliate Application');
			$this->email->message($body);	
			
			$this->email->send();
            $this->response->script("$('#show_success').modal('show')");
        }
        else {
            $this->response->script("$('#show_failed').modal('show')");
        }
	        
        $this->response->send();
	}

	function update_details(){
		$user = $this->ion_auth->user()->row();
		$update_button = $this->input->post('update_button');

		if($update_button == $user->id . "_update_affiliate_account"){
        $data = array(
            'company'   => $this->input->post('company'),
            'country'   => $this->input->post('country'),
            'mobile' 	=> $this->input->post('mobile'),
            'whatsapp'  => $this->input->post('whatsApp'),
            'website'   => $this->input->post('website'),
            'twitter'   => $this->input->post('twitter'),
            'facebook'  => $this->input->post('fb'),
            'linkedin'  => $this->input->post('ln'),
            'linkedin'  => $this->input->post('ln'),
            'paypal_email'  => $this->input->post('paypal_email')
        );
        $this->ion_auth->update($user->id, $data);
        	$this->session->set_flashdata('msg', "Update successful");
        	$this->session->set_flashdata('msg_type', 'success');  
        }
        else{
        	$this->session->set_flashdata('msg', "Error occured, please try again");
        	$this->session->set_flashdata('msg_type', 'danger');  
        }
        redirect('affiliate/dashboard_approved', 'refresh');
	}
	
}